{"version":3,"sources":["App.tsx","useredux/reducers/combineReducers.ts","useredux/reducers/place.ts","useredux/action/places.ts","useredux/reducers/herePlace.ts","index.tsx"],"names":["App","className","rootReducer","combineReducers","Place","state","action","type","JSON","stringify","data","HerePlace","coords","hasErroredPlace","hasErrored","isLoadingPlace","isLoading","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yOAqBeA,MAZf,WACE,OACE,yBAAKC,UAAU,OACb,2D,uBCPC,IAAIC,EAAeC,YAAgB,CACtCC,MCQG,WAA8E,IAA/DC,EAA8D,uDAAtD,GAAIC,EAAkD,uCAChF,OAAQA,EAAOC,MACX,ICZmB,cDaf,OAAGC,KAAKC,UAAUH,EAAOI,QAAQF,KAAKC,UAAUJ,GACrCC,EAAOI,KAEXL,EAGX,QACI,OAAOA,IDjBfM,UGoCG,WAAyE,IAAtDN,EAAqD,uDAA/C,GAAGC,EAA4C,uCAC3E,OAAQA,EAAOC,MACX,IA3CM,QA4CF,OAAOD,EAAOM,OAGlB,QACI,OAAOP,IH1CfQ,gBCiCG,WAA6E,IAApDR,EAAmD,wDAApCC,EAAoC,uCAC/E,OAAQA,EAAOC,MACX,ICtCyB,oBDuCrB,OAAOD,EAAOQ,WAElB,QACI,OAAOT,IDtCfU,eCoBG,WAA4E,IAApDV,EAAmD,wDAApCC,EAAoC,uCAC9E,OAAQA,EAAOC,MACX,ICzBwB,mBD0BpB,OAAOD,EAAOU,UAGlB,QACI,OAAOX,M,QGxBbY,EAAQC,YAAYhB,EAAaiB,YAAgBC,MAGvDC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGNM,SAASC,eAAe,W","file":"static/js/main.54c98496.chunk.js","sourcesContent":["import React from 'react';\r\nimport MapsPage from './pages/mapsPage/mapsPage';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport 'normalize.css';\r\nimport Auth from \"./pages/auth/auth\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>waerwae fawe awe awe awe </h1> \r\n        {/* <Switch>\r\n            <Route exact path='/' component={MapsPage}/>\r\n            <Route path=\"/login\" component={Auth}/>\r\n        </Switch> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from \"redux\";\r\nimport {hasErroredPlace, isLoadingPlace, Place} from \"./place\";\r\nimport {HerePlace} from \"./herePlace\";\r\n\r\n\r\nexport let rootReducer =  combineReducers({\r\n    Place,\r\n    HerePlace,\r\n    hasErroredPlace,\r\n    isLoadingPlace,\r\n});\r\n\r\nexport type rootReducerType = typeof rootReducer;\r\n\r\nexport type globalStateType = ReturnType<rootReducerType>;\r\n","import {\r\n    FETCH_ITEMS,\r\n    ITEMS_HAS_ERRORED,\r\n    ITEMS_IS_LOADING,\r\n    actionCreateSetPlaces,\r\n    actionCreateErrored,\r\n    actionCreateLoading\r\n} from \"../action/places\";\r\n\r\n\r\n\r\nimport {placeType} from \"./herePlace\";\r\n\r\n\r\nexport function Place(state = [], action:actionCreateSetPlaces):Array<placeType>|[] {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS : {\r\n            if(JSON.stringify(action.data)!==JSON.stringify(state)){\r\n                return action.data\r\n            }\r\n            return state\r\n\r\n        }\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport function isLoadingPlace(state = false, action:actionCreateLoading):boolean {\r\n    switch (action.type) {\r\n        case ITEMS_IS_LOADING : {\r\n            return action.isLoading\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function hasErroredPlace(state = false, action:actionCreateErrored):boolean {\r\n    switch (action.type) {\r\n        case ITEMS_HAS_ERRORED : {\r\n            return action.hasErrored\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {placeType} from \"../reducers/herePlace\";\r\nimport {Dispatch} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const ITEMS_HAS_ERRORED = 'ITEMS_HAS_ERRORED';\r\nexport const ITEMS_IS_LOADING = 'ITEMS_IS_LOADING';\r\n\r\n\r\n\r\nexport type actionCreateSetPlaces = {\r\n    type: typeof FETCH_ITEMS,\r\n    data: Array<placeType>\r\n}\r\n\r\nexport type actionCreateErrored = {\r\n    type: typeof ITEMS_HAS_ERRORED,\r\n    hasErrored: boolean,\r\n}\r\n\r\nexport type actionCreateLoading = {\r\n    type: typeof ITEMS_IS_LOADING,\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setPlaces = (data:Array<placeType>):actionCreateSetPlaces=> {\r\n    return{\r\n        type: FETCH_ITEMS,\r\n        data: data\r\n    }\r\n};\r\n\r\nexport const fetchingHasErrored = (hasErrored=false):actionCreateErrored=> {\r\n    return{\r\n        type: ITEMS_HAS_ERRORED,\r\n        hasErrored: hasErrored\r\n    };\r\n};\r\n\r\nexport const itemIsLoading = (isLoading=false):actionCreateLoading => {\r\n    return {\r\n        type: ITEMS_IS_LOADING,\r\n        isLoading: isLoading\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const getPlacesThunk = (url:string,oldProp:Array<placeType>) =>{\r\n    return (dispatch:Dispatch):void => {\r\n        if(oldProp.length===0){\r\n            dispatch(itemIsLoading(true));}\r\n        fetch(url,{\r\n            cache:\"no-cache\"\r\n        })\r\n            .then((res) => {\r\n                if(oldProp.length===0){\r\n                    dispatch(itemIsLoading(false));}\r\n                return res\r\n            })\r\n            .then((res)=>res.json())\r\n            .then((items:Array<placeType>)=>dispatch(setPlaces(items)))\r\n            .catch(()=>dispatch(fetchingHasErrored(true)))\r\n    }\r\n};\r\n\r\n\r\n","\r\n\r\nconst PLACE = \"PLACE\";\r\n\r\n\r\nexport interface placeType {\r\n    id?:number,\r\n    coords:string,\r\n    name:string\r\n}\r\n\r\nexport interface coordsPlaceType {\r\n        id?:number|undefined,\r\n        lat?:number|undefined,\r\n        lng?:number|undefined\r\n}\r\n\r\n\r\n\r\nexport interface actionCreatePlace{\r\n    type: typeof PLACE\r\n    coords: coordsPlaceType;\r\n}\r\n\r\nexport const selectedPlace = (items:Array<placeType>,id:number):placeType|undefined => {\r\n    return items.find(item=>item.id===id)\r\n};\r\n\r\n\r\n\r\nexport const setSelectedPlace = (place:placeType):actionCreatePlace => {\r\n    const placeCoord:Array<string> = place.coords.split(',');\r\n    return{\r\n        type: PLACE,\r\n        coords: {\r\n            id:place.id,\r\n            lat: +(placeCoord[0].trim()),\r\n            lng: +(placeCoord[1].trim())\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport function HerePlace(state={},action:actionCreatePlace):coordsPlaceType|{}{\r\n    switch (action.type) {\r\n        case PLACE : {\r\n            return action.coords\r\n        }\r\n\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {rootReducer} from \"./useredux/reducers/combineReducers\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById(\"root\"));\r\n"],"sourceRoot":""}