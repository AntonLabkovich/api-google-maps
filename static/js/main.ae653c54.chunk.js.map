{"version":3,"sources":["useredux/reducers/herePlace.ts","modules/mapsContainer/maps-container.tsx","components/cardPlace/cardPlace.tsx","useredux/action/places.ts","modules/AllCardPlaces/AllCardPlaces.tsx","pages/mapsPage/mapsPage.tsx","pages/auth/auth.tsx","App.tsx","useredux/reducers/combineReducers.ts","useredux/reducers/place.ts","index.tsx"],"names":["setSelectedPlace","place","placeCoord","coords","split","type","id","lat","trim","lng","MapsContainer","props","state","loading","google","this","zoom","style","width","center","HerePlace","position","React","Component","GoogleApiWrapper","apiKey","LoadingContainer","className","CircularProgress","connect","store","dispatch","CardPlace","Card","onClick","selectPlaceClick","palceItem","raised","seclectedPlace","name","itemIsLoading","isLoading","AllCard","selectPlace","items","find","item","selectedPlace","places","timerID","fetchData","intervalID","setInterval","setState","hasErrored","right","top","bottom","LinearProgress","map","key","thisPlace","clearInterval","compose","isLoadingPlace","hasErroredPlace","Place","url","oldProp","length","fetch","cache","then","res","json","data","catch","fetchingHasErrored","getPlacesThunk","MapsPage","setCookie","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","document","cookie","deleteCookie","forceUpdate","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","Button","variant","color","to","Auth","handleChange","e","target","valueName","valuePas","handleClickCheck","remember","handleClick","ok","users","some","toUpperCase","password","login","Paper","TextField","label","onChange","error","required","disabled","FormControlLabel","control","Checkbox","checked","App","exact","component","rootReducer","combineReducers","action","JSON","stringify","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae653c54.chunk.js","sourcesContent":["\r\n\r\nconst PLACE = \"PLACE\";\r\n\r\n\r\nexport interface placeType {\r\n    id?:number,\r\n    coords:string,\r\n    name:string\r\n}\r\n\r\nexport interface coordsPlaceType {\r\n        id?:number|undefined,\r\n        lat?:number|undefined,\r\n        lng?:number|undefined\r\n}\r\n\r\n\r\n\r\nexport interface actionCreatePlace{\r\n    type: typeof PLACE\r\n    coords: coordsPlaceType;\r\n}\r\n\r\nexport const selectedPlace = (items:Array<placeType>,id:number):placeType|undefined => {\r\n    return items.find(item=>item.id===id)\r\n};\r\n\r\n\r\n\r\nexport const setSelectedPlace = (place:placeType):actionCreatePlace => {\r\n    const placeCoord:Array<string> = place.coords.split(',');\r\n    return{\r\n        type: PLACE,\r\n        coords: {\r\n            id:place.id,\r\n            lat: +(placeCoord[0].trim()),\r\n            lng: +(placeCoord[1].trim())\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport function HerePlace(state={},action:actionCreatePlace):coordsPlaceType|{}{\r\n    switch (action.type) {\r\n        case PLACE : {\r\n            return action.coords\r\n        }\r\n\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './maps-container.scss';\r\nimport {globalStateType} from \"../../useredux/reducers/combineReducers\";\r\nimport {coordsPlaceType, placeType, setSelectedPlace} from \"../../useredux/reducers/herePlace\";\r\n\r\n\r\n\r\ninterface IMapsContainerState {\r\n    loading:boolean\r\n}\r\n\r\ninterface ownProps {\r\n    google:any\r\n}\r\n\r\ninterface IMapsContainerProps {\r\n    HerePlace:coordsPlaceType,\r\n\r\n}\r\n\r\ninterface ImapDispatchToPropsType{\r\n    setSelectedPlace: (place: placeType) => coordsPlaceType\r\n}\r\n\r\ntype fullPropsType = ImapDispatchToPropsType & IMapsContainerProps & ownProps;\r\n\r\nclass MapsContainer extends React.Component<fullPropsType, IMapsContainerState> {\r\n    constructor(props:fullPropsType){\r\n        super(props);\r\n        this.state = {\r\n            loading:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <Map google={this.props.google}\r\n             zoom={17}\r\n            // @ts-ignore\r\n             style={{width:'75%'}}\r\n            // @ts-ignore\r\n             center={{ lat: this.props.HerePlace.lat,\r\n                        lng: this.props.HerePlace.lng}}>\r\n\r\n            <Marker\r\n            // @ts-ignore\r\n            position={{ lat: +this.props.HerePlace.lat, lng: +this.props.HerePlace.lng}} />\r\n        </Map>\r\n    );}\r\n}\r\n\r\nconst LoadingContainer = () => (\r\n    <div className={'preloader-continer'}><CircularProgress/></div>\r\n);\r\n\r\n\r\nconst mapStateToProps = (store:globalStateType):IMapsContainerProps=>{\r\n    return {\r\n        HerePlace:store.HerePlace\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:any):ImapDispatchToPropsType => {\r\n    return {\r\n        setSelectedPlace: (place:placeType) => dispatch(setSelectedPlace(place))\r\n    };\r\n};\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyCkvXjd0sh8FZZ7v_Y-0Ib0_cpr2R3Kpng'),\r\n    LoadingContainer: LoadingContainer,\r\n})(connect(mapStateToProps, mapDispatchToProps)(MapsContainer));\r\n\r\n\r\n","import React, {FC} from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport {coordsPlaceType, placeType} from \"../../useredux/reducers/herePlace\";\r\n\r\ntype propsTypeOneCard = {\r\n    palceItem:any\r\n    selectPlaceClick: (id:number)=>void\r\n    seclectedPlace:coordsPlaceType\r\n}\r\n\r\n\r\nexport default function CardPlace(props:propsTypeOneCard) {\r\n    return (\r\n        <Card\r\n              onClick={()=>props.selectPlaceClick(props.palceItem.id) }\r\n              raised={props.seclectedPlace.id === props.palceItem.id}>\r\n            <p>{props.palceItem.name}</p>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {placeType} from \"../reducers/herePlace\";\r\nimport {Dispatch} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const ITEMS_HAS_ERRORED = 'ITEMS_HAS_ERRORED';\r\nexport const ITEMS_IS_LOADING = 'ITEMS_IS_LOADING';\r\n\r\n\r\n\r\nexport type actionCreateSetPlaces = {\r\n    type: typeof FETCH_ITEMS,\r\n    data: Array<placeType>\r\n}\r\n\r\nexport type actionCreateErrored = {\r\n    type: typeof ITEMS_HAS_ERRORED,\r\n    hasErrored: boolean,\r\n}\r\n\r\nexport type actionCreateLoading = {\r\n    type: typeof ITEMS_IS_LOADING,\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setPlaces = (data:Array<placeType>):actionCreateSetPlaces=> {\r\n    return{\r\n        type: FETCH_ITEMS,\r\n        data: data\r\n    }\r\n};\r\n\r\nexport const fetchingHasErrored = (hasErrored=false):actionCreateErrored=> {\r\n    return{\r\n        type: ITEMS_HAS_ERRORED,\r\n        hasErrored: hasErrored\r\n    };\r\n};\r\n\r\nexport const itemIsLoading = (isLoading=false):actionCreateLoading => {\r\n    return {\r\n        type: ITEMS_IS_LOADING,\r\n        isLoading: isLoading\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const getPlacesThunk = (url:string,oldProp:Array<placeType>) =>{\r\n    return (dispatch:Dispatch):void => {\r\n        if(oldProp.length===0){\r\n            dispatch(itemIsLoading(true));}\r\n        fetch(url,{\r\n            cache:\"no-cache\"\r\n        })\r\n            .then((res) => {\r\n                if(oldProp.length===0){\r\n                    dispatch(itemIsLoading(false));}\r\n                return res\r\n            })\r\n            .then((res)=>res.json())\r\n            .then((items:Array<placeType>)=>dispatch(setPlaces(items)))\r\n            .catch(()=>dispatch(fetchingHasErrored(true)))\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {LinearProgress} from '@material-ui/core';\r\nimport './AllCardPlaces.scss'\r\nimport CardPlace from \"../../components/cardPlace/cardPlace\";\r\nimport {getPlacesThunk} from \"../../useredux/action/places\";\r\nimport {selectedPlace, setSelectedPlace, placeType, coordsPlaceType} from \"../../useredux/reducers/herePlace\"\r\nimport {globalStateType} from \"../../useredux/reducers/combineReducers\";\r\nimport {compose} from 'redux';\r\n\r\n\r\ninterface IProps {}\r\n\r\ninterface ImapStateToPropsType {\r\n    isLoading: boolean,\r\n    hasErrored: boolean,\r\n    places: Array<placeType>,\r\n    thisPlace: coordsPlaceType,\r\n}\r\n\r\ninterface ImapDispatchToPropsType {\r\n    fetchData: (url:string, oldProp:Array<placeType>)=>Array<placeType>\r\n    setSelectedPlace: (place: placeType) => coordsPlaceType\r\n}\r\n\r\ntype IallProps = ImapDispatchToPropsType & ImapStateToPropsType & IProps\r\n\r\n\r\ninterface IState {\r\n    timerID: any\r\n}\r\n\r\n\r\nclass AllCard extends React.Component<IallProps, IState> {\r\n    constructor(props:IallProps){\r\n        super(props);\r\n        this.state = {\r\n            timerID: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchData('https://antonlabkovich.github.io/api-google-maps/api/endpoint/plases.json', this.props.places);\r\n        let intervalID = setInterval(() => {\r\n            this.props.fetchData('https://antonlabkovich.github.io/api-google-maps/api/endpoint/plases.json', this.props.places);\r\n        }, 3000);\r\n        this.setState({\r\n            timerID: intervalID\r\n        })\r\n\r\n    }\r\n\r\n    selectPlace = (id:number) => {\r\n        const place:any = selectedPlace(this.props.places, id);\r\n        this.props.setSelectedPlace(place)\r\n    };\r\n\r\n    render() {\r\n        if(this.props.hasErrored){\r\n            return <p style={{position: \"absolute\", right: \"0\", top: '0', bottom: \"0\", width: '24%'}}> что-то пошло не так</p>}\r\n        return (\r\n            <>\r\n            {this.props.isLoading ? <div style={{position: \"absolute\", right: \"0\", top: '0', bottom: \"0\", width: '24%'}}><LinearProgress/></div> :\r\n                    <div className=\"cards\"\r\n                         style={{position: \"absolute\", right: \"0\", top:\"50px\", width: '24%'}}>\r\n                        {this.props.places.map((item) =>\r\n                            <CardPlace\r\n                                palceItem={item}\r\n                                key={item.id}\r\n                                selectPlaceClick={this.selectPlace}\r\n                                seclectedPlace={this.props.thisPlace}\r\n                            />\r\n                        )}\r\n                    </div>}\r\n            </>\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.timerID);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (store:globalStateType):ImapStateToPropsType => {\r\n    return {\r\n        isLoading: store.isLoadingPlace,\r\n        hasErrored: store.hasErroredPlace,\r\n        places: store.Place,\r\n        thisPlace: store.HerePlace,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:any):ImapDispatchToPropsType => {\r\n    return {\r\n        fetchData: (url:string, oldProp:Array<placeType>) => dispatch(getPlacesThunk(url, oldProp)),\r\n        setSelectedPlace: (place:placeType) => dispatch(setSelectedPlace(place))\r\n    };\r\n};\r\n\r\nexport default compose (connect(mapStateToProps, mapDispatchToProps)(AllCard))\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport MapsContainer from '../../modules/mapsContainer/maps-container';\r\nimport AllCard from \"../../modules/AllCardPlaces/AllCardPlaces\";\r\n\r\nimport './mapsPage.scss'\r\nimport { Button } from '@material-ui/core';\r\n\r\ninterface IPropsMaps {\r\n    cookie:boolean\r\n}\r\n\r\n\r\nexport default class MapsPage extends React.Component<IPropsMaps> {\r\n    constructor(props:IPropsMaps){\r\n        super(props);\r\n        this.state = {\r\n            cookie: true\r\n        }\r\n    }\r\n\r\n    setCookie = (name:string, value:string, options:any) => {\r\n\r\n        options = {\r\n            path: '/',\r\n            ...options\r\n        };\r\n\r\n        if (options.expires instanceof Date) {\r\n            options.expires = options.expires.toUTCString();\r\n        }\r\n\r\n        let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n        for (let optionKey in options) {\r\n            updatedCookie += \"; \" + optionKey;\r\n            let optionValue = options[optionKey];\r\n            if (optionValue !== true) {\r\n                updatedCookie += \"=\" + optionValue;\r\n            }\r\n        }\r\n\r\n        document.cookie = updatedCookie;\r\n    };\r\n\r\n    deleteCookie = (name:string) => {\r\n        this.setCookie(name, \"\", {\r\n            'max-age': -1\r\n        });\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getCookie = ():string|undefined => {\r\n        let matches:Array<string>|null = document.cookie.match(new RegExp(\r\n            \"(?:^|; )\" + 'login'.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    };\r\n\r\n    render(){\r\n        if(this.getCookie())\r\n            return (\r\n                <div className=\"maps-page\">\r\n                    <MapsContainer/>\r\n                    <AllCard/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{position: \"absolute\", right: \"0\", top: '0', width: '24%'}}\r\n                        onClick={()=>{this.deleteCookie('login')}}>\r\n                        Выход\r\n                    </Button>\r\n                </div>\r\n            );\r\n        return <Redirect to=\"/login\"/>;\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport './auth.scss'\r\n\r\nimport {Paper, TextField, Button, Checkbox, FormControlLabel,CircularProgress} from '@material-ui/core';\r\n\r\n\r\ninterface IProps {}\r\ninterface IState {\r\n    valuePas: string,\r\n    valueName: string,\r\n    remember: boolean,\r\n    login:number,\r\n    loading: boolean\r\n}\r\n\r\ntype User = {\r\n    id:number,\r\n    name:string,\r\n    password:string\r\n}\r\n\r\n\r\n\r\nexport default class Auth extends React.Component<IProps, IState> {\r\n\r\n    constructor(props:IProps) {\r\n        super(props);\r\n        this.state = {\r\n            valuePas: '',\r\n            valueName: '',\r\n            remember: false,\r\n            login:0,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.login===0||this.state.login===-1)\r\n        return (\r\n            <div className={\"auth\"}>\r\n                {!this.state.loading?<Paper className={\"auth-containerForm\"}>\r\n                    <form>\r\n                        {this.state.login===-1?<div>\r\n                            <p>Нет такого пользователя</p>\r\n                        </div>:null}\r\n                        <p>Info - use name: Anton, password: 1234 </p>\r\n                        <div>\r\n                            <TextField id=\"name\" label=\"Name\" variant=\"outlined\"\r\n                                       className={'auth-containerForm-textinput'}\r\n                                       onChange={this.handleChange}\r\n                                       error={!this.state.valueName}\r\n                                       required/>\r\n                            <TextField id=\"password\" label=\"Password\"\r\n                                       variant=\"outlined\" type=\"password\"\r\n                                       onChange={this.handleChange}\r\n                                       className={'auth-containerForm-textinput'}\r\n                                       error={!this.state.valuePas}\r\n                                       required/>\r\n                        </div>\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"primary\"\r\n                                    disabled={this.state.valuePas && this.state.valueName ? false : true}\r\n                            onClick={this.handleClick}>\r\n                                Авторизоваться\r\n                            </Button>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox checked={this.state.remember} color=\"primary\" onChange={this.handleClickCheck}/> } label=\"Запомнить\" />\r\n                        </div>\r\n                    </form>\r\n                </Paper>:<CircularProgress className={'progress'}/>}\r\n            </div>\r\n        );\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        switch (e.target.id) {\r\n            case \"name\": {\r\n                this.setState({\r\n                    valueName: e.target.value\r\n                });\r\n                return\r\n            }\r\n            case \"password\": {\r\n                this.setState({\r\n                    valuePas: e.target.value\r\n                });\r\n                return;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n    handleClickCheck = () => {\r\n        this.setState({\r\n            remember: !this.state.remember\r\n        })\r\n    };\r\n\r\n    handleClick = () => {\r\n        let ok:boolean = false;\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        fetch('https://antonlabkovich.github.io/api-google-maps/api/endpoint/users.json')\r\n            .then(res=>res.json())\r\n            .then((users)=>{\r\n                ok = users.some((item:User)=>item.name.toUpperCase()===this.state.valueName.toUpperCase()&&item.password===this.state.valuePas);\r\n                if(this.state.remember && ok){\r\n                    document.cookie = \"login=true; max-age=3600\";\r\n                    this.setState({\r\n                        login: 1,\r\n                        loading: false,\r\n                        valuePas: '',\r\n                        valueName: ''\r\n                    })\r\n                }else if(ok){\r\n                    document.cookie = \"login=true\";\r\n                    this.setState({\r\n                        login: 1,\r\n                        loading: false,\r\n                        valuePas: '',\r\n                        valueName: ''\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        login: -1,\r\n                        loading: false,\r\n                        valuePas: '',\r\n                        valueName: ''\r\n                    })\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport MapsPage from './pages/mapsPage/mapsPage';\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\n\r\nimport 'normalize.css';\r\nimport Auth from \"./pages/auth/auth\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h3>Google maps API</h3>\r\n      <Link to=\"/login\">Перейти</Link> \r\n      <Auth/>\r\n      <Route>\r\n        <Switch>\r\n            <Route exact path='/' component={MapsPage}/>\r\n            <Route path=\"/login\" component={Auth}/>\r\n        </Switch>\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from \"redux\";\r\nimport {hasErroredPlace, isLoadingPlace, Place} from \"./place\";\r\nimport {HerePlace} from \"./herePlace\";\r\n\r\n\r\nexport let rootReducer =  combineReducers({\r\n    Place,\r\n    HerePlace,\r\n    hasErroredPlace,\r\n    isLoadingPlace,\r\n});\r\n\r\nexport type rootReducerType = typeof rootReducer;\r\n\r\nexport type globalStateType = ReturnType<rootReducerType>;\r\n","import {\r\n    FETCH_ITEMS,\r\n    ITEMS_HAS_ERRORED,\r\n    ITEMS_IS_LOADING,\r\n    actionCreateSetPlaces,\r\n    actionCreateErrored,\r\n    actionCreateLoading\r\n} from \"../action/places\";\r\n\r\n\r\n\r\nimport {placeType} from \"./herePlace\";\r\n\r\n\r\nexport function Place(state = [], action:actionCreateSetPlaces):Array<placeType>|[] {\r\n    switch (action.type) {\r\n        case FETCH_ITEMS : {\r\n            if(JSON.stringify(action.data)!==JSON.stringify(state)){\r\n                return action.data\r\n            }\r\n            return state\r\n\r\n        }\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport function isLoadingPlace(state = false, action:actionCreateLoading):boolean {\r\n    switch (action.type) {\r\n        case ITEMS_IS_LOADING : {\r\n            return action.isLoading\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function hasErroredPlace(state = false, action:actionCreateErrored):boolean {\r\n    switch (action.type) {\r\n        case ITEMS_HAS_ERRORED : {\r\n            return action.hasErrored\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {rootReducer} from \"./useredux/reducers/combineReducers\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById(\"root\"));\r\n"],"sourceRoot":""}